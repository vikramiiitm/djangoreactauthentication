{"version":3,"sources":["containers/Home.js","actions/types.js","actions/auth.js","containers/Login.js","containers/Signup.js","containers/Activate.js","containers/ResetPassword.js","containers/ResetPasswordConfirm.js","reducers/auth.js","components/store.js","components/Navbar.js","hocs/Layout.js","App.js","index.js"],"names":["Home","className","class","LOGIN_SUCCESS","LOGIN_FAIL","SIGNUP_SUCCESS","SIGNUP_FAIL","USER_LOADED_SUCCESS","USER_LOADED_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","LOGOUT","load_user","dispatch","a","localStorage","getItem","config","headers","axios","get","res","type","payload","data","connect","state","isAuthenticated","login","email","password","body","JSON","stringify","post","process","useState","formData","setFormData","onChange","e","target","name","value","to","onSubmit","preventDefault","placeholder","required","minLength","signup","re_password","accountCreated","setAccountCreated","first_name","last_name","verify","uid","token","match","verified","setVerified","style","marginTop","onClick","params","ResetPassword","ResetPasswordConfirm","initialState","access","refresh","user","middleware","thunk","store","createStore","action","setItem","removeItem","composeWithDevTools","applyMiddleware","logout","redirect","setRedirect","logout_user","id","href","checkAuthenticated","code","props","useEffect","children","App","Layout","exact","path","component","Login","Signup","Activate","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f046ee64.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Home = () => (\n    <div className='container'>\n        <div class=\"jumbotron bg-dark text-primary mt-4 p-4\">\n            <h1 class=\"display-4\">Authentication system</h1>\n            <p class=\"lead text-light\">Authentication demonstration using DRF and ReactJS</p>\n            <hr class=\"my-4\"/>\n            <p class =\"lead\">\n            </p>\n        </div>\n    </div>\n);\n\nexport default Home;","export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\nexport const ACTIVATION_SUCCESS = 'ACTIVATION_SUCCESS';\nexport const ACTIVATION_FAIL = 'ACTIVATION_FAIL';\nexport const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS';\nexport const USER_LOADED_FAIL = 'USER_LOADED_FAIL';\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\nexport const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\nexport const PASSWORD_RESET_FAIL = 'PASSWORD_RESET_FAIL';\nexport const PASSWORD_RESET_SUCCESS = 'PASSWORD_RESET_SUCCESS';\nexport const PASSWORD_RESET_CONFIRM_FAIL = 'PASSWORD_RESET_CONFIRM_FAIL';\nexport const PASSWORD_RESET_CONFIRM_SUCCESS = 'PASSWORD_RESET_CONFIRM_SUCCESS';\nexport const LOGOUT = 'LOGOUT';","import axios from 'axios'\nimport {\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    USER_LOADED_SUCCESS,\n    USER_LOADED_FAIL,\n    AUTHENTICATED_SUCCESS,\n    AUTHENTICATED_FAIL,\n    PASSWORD_RESET_SUCCESS,\n    PASSWORD_RESET_FAIL,\n    PASSWORD_RESET_CONFIRM_SUCCESS,\n    PASSWORD_RESET_CONFIRM_FAIL,\n    SIGNUP_SUCCESS,\n    SIGNUP_FAIL,\n    ACTIVATION_SUCCESS,\n    ACTIVATION_FAIL,\n    LOGOUT,\n} from './types';\n\n\n// check by chacking verifying the access token\nexport const checkAuthenticated = () => async (dispatch) => {\n    if (localStorage.getItem('access')) {\n        const config = {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n        };\n\n        const body = JSON.stringify({ token: localStorage.getItem('access')})\n\n        try {\n            const res = await axios.post(`http://localhost:8000/auth/jwt/verify/`,body, config);\n            if (res.data.code !== 'token_not_valid'){\n                dispatch({\n                    type:AUTHENTICATED_SUCCESS\n                });\n            } else {\n                dispatch({\n                    type:AUTHENTICATED_FAIL\n                });\n            }\n        } catch(err) {\n            dispatch({\n                type:AUTHENTICATED_FAIL\n            });\n        }\n    } else {\n        dispatch({\n            type:AUTHENTICATED_FAIL\n        });\n    }\n};\n\n\nexport const load_user = () => async dispatch => {\n    if (localStorage.getItem('access')) {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\n                'Accept': 'application/json'\n            }\n        }; \n\n        try {\n            // const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config);\n            const res = await axios.get(`http://localhost:8000/auth/users/me`,config)\n    \n            dispatch({\n                type: USER_LOADED_SUCCESS,\n                payload: res.data\n            });\n        } catch (err) {\n            dispatch({\n                type: USER_LOADED_FAIL\n            });\n        }\n    } else {\n        dispatch({\n            type: USER_LOADED_FAIL\n        });\n    }\n};\n\n\nexport const login = (email, password) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({ email, password });\n\n    try {\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config);\n\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res.data\n        });\n\n        dispatch(load_user());\n    } catch (err) {\n        dispatch({\n            type: LOGIN_FAIL\n        })\n    }\n};\nexport const signup = (email, password,re_password) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({ email, password });\n\n    try {\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/`, body, config);\n\n        dispatch({\n            type: SIGNUP_SUCCESS,\n            payload: res.data\n        });\n\n    } catch (err) {\n        dispatch({\n            type: SIGNUP_FAIL\n        })\n    }\n};\n\nexport const verify =(uid,token) => async dispatch =>{\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({ uid, token });\n\n    try {\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/activation/`, body, config);\n\n        dispatch({\n            type: ACTIVATION_SUCCESS,\n        });\n\n    } catch (err) {\n        dispatch({\n            type: ACTIVATION_FAIL\n        })\n    } \n}\nexport const logout = () => dispatch => {\n    dispatch({\n        type:LOGOUT\n    });\n}","import React ,{useState} from \"react\";\nimport {Link, Redirect} from 'react-router-dom'\nimport { connect } from 'react-redux'\n\n// import login async action creator from auth\nimport {login} from '../actions/auth'\n\nconst Login = ({login,isAuthenticated}) => {\n    const [formData, setFormData] = useState({\n        email:'',\n        password:''\n    });\n\n    const {email,password} = formData;\n\n    const onChange = e => setFormData({\n        ...formData,\n        [e.target.name]: e.target.value\n    })\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        // call the login action creator in auth/login to login\n        login(email,password)\n    }\n\n    // is the user authenticated?\n    // redirect to home page\n    if(isAuthenticated){\n        return <Redirect to=\"/\" />\n    }\n\n    return (\n        <div className=\"container mt-5\">\n            <p>Sign in to your account</p>\n\n            <form onSubmit={e => onSubmit(e)}>\n                <div className=\"form-group\">\n                    <input\n                        className=\"form-control\"\n                        type=\"email\"\n                        placeholder=\"Email\"\n                        name=\"email\"\n                        value={email}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        className=\"form-control\"\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        name=\"password\"\n                        value={password}\n                        onChange={e => onChange(e)}\n                        minLength='6'\n                        required\n                    />\n                </div>\n                <button className=\"btn btn-primary\" type=\"submit\">Login</button>\n            </form>\n            <p className=\"mt-3\"><Link to=\"/signup\">SignUp</Link> if you don't have account</p>\n            <p className=\"mt-3\">Forgot your password? <Link to=\"/reset-password\">Reset Password</Link></p>\n        </div>\n    );\n};\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.isAuthenticated\n});\nexport default connect(mapStateToProps, {login})(Login);\n","import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signup } from '../actions/auth';\nimport axios from 'axios';\n\nconst Signup = ({ signup, isAuthenticated }) => {\n    const [accountCreated, setAccountCreated] = useState(false);\n    const [formData, setFormData] = useState({\n        first_name: '',\n        last_name: '',\n        email: '',\n        password: '',\n        re_password: ''\n    });\n\n    const { first_name, last_name, email, password, re_password } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        if (password === re_password) {\n            signup(first_name, last_name, email, password, re_password);\n            setAccountCreated(true);\n        }\n    };\n\n    if (isAuthenticated) {\n        return <Redirect to='/' />\n    }\n    if (accountCreated) {\n        return <Redirect to='/login' />\n    }\n\n    return (\n        <div className='container mt-5'>\n            <h1>Sign Up</h1>\n            <p>Create your Account</p>\n            <form onSubmit={e => onSubmit(e)}>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='text'\n                        placeholder='First Name*'\n                        name='first_name'\n                        value={first_name}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='text'\n                        placeholder='Last Name*'\n                        name='last_name'\n                        value={last_name}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='email'\n                        placeholder='Email*'\n                        name='email'\n                        value={email}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='password'\n                        placeholder='Password*'\n                        name='password'\n                        value={password}\n                        onChange={e => onChange(e)}\n                        minLength='6'\n                        required\n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='password'\n                        placeholder='Confirm Password*'\n                        name='re_password'\n                        value={re_password}\n                        onChange={e => onChange(e)}\n                        minLength='6'\n                        required\n                    />\n                </div>\n                <button className='btn btn-primary' type='submit'>Register</button>\n            </form>\n            <p className='mt-3'>\n                Already have an account? <Link to='/login'>Sign In</Link>\n            </p>\n        </div>\n    );\n};\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { signup })(Signup);","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { verify } from '../actions/auth';\n\nconst Activate = ({ verify, match }) => {\n    const [verified, setVerified] = useState(false);\n\n    const verify_account = e => {\n        const uid = match.params.uid;\n        const token = match.params.token;\n\n        verify(uid, token);\n        setVerified(true);\n    };\n\n    if (verified) {\n        return <Redirect to='/' />\n    }\n\n    return (\n        <div className='container'>\n            <div \n                className='d-flex flex-column justify-content-center align-items-center'\n                style={{ marginTop: '200px' }}\n            >\n                <h1>Verify your Account:</h1>\n                <button\n                    onClick={verify_account}\n                    style={{ marginTop: '50px' }}\n                    type='button'\n                    className='btn btn-primary'\n                >\n                    Verify\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default connect(null, { verify })(Activate);","import React from \"react\"\n\nconst ResetPassword = () => (\n    <div>\n        Reset passwords\n    </div>\n)\n\nexport default ResetPassword","import React from \"react\"\n\nconst ResetPasswordConfirm = () => (\n    <div>\n        Reset Password Confirm\n    </div>\n)\n\nexport default ResetPasswordConfirm","import {\nLOGIN_SUCCESS,\nLOGIN_FAIL,\nUSER_LOADED_SUCCESS,\nUSER_LOADED_FAIL,\nAUTHENTICATED_SUCCESS,\nAUTHENTICATED_FAIL,\nLOGOUT,\nSIGNUP_SUCCESS,\nSIGNUP_FAIL,\n} from '../actions/types'\nimport Login from '../containers/Login';\n\n// creat auth reducer\n\n// initialstate\nconst initialState = {\n    access: localStorage.getItem('access'),\n    refresh: localStorage.getItem('refresh'),\n    isAuthenticated: null,\n    user: null\n};\n\n// reducer\nexport default function(state = initialState,action){\n    const {type,payload} = action;\n\n    switch(type){\n        case AUTHENTICATED_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated:true\n            }\n        case LOGIN_SUCCESS:\n            // set the access token in local storage\n            localStorage.setItem('access',payload.access)\n            return {\n                // returning the state object\n                ...state,\n                isAuthenticated:true,\n                access: payload.access,\n                refresh:payload.refresh \n            }\n        case SIGNUP_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated:false\n            }\n        case SIGNUP_FAIL:\n        case USER_LOADED_SUCCESS:\n            return {\n                ...state,\n                user : payload\n            }\n        case AUTHENTICATED_FAIL:\n            return {\n                ...state,\n                isAuthenticated:false\n            }\n        case USER_LOADED_FAIL:\n            return {\n                ...state,\n                user : null\n            }\n        case LOGOUT:\n            localStorage.removeItem('acsess')\n            localStorage.removeItem('refresh')\n            return{\n                ...state,\n                isAuthenticated:false,\n                access:null,\n                refresh:null,\n                user:null\n            }\n        case LOGIN_FAIL:\n            // remove tokens\n            localStorage.removeItem('acsess')\n            localStorage.removeItem('refresh')\n            return{\n                ...state,\n                isAuthenticated:false,\n                access:null,\n                refresh:null,\n                user:null\n            }\n        default:\n            return state\n    }\n}","import { createStore, applyMiddleware, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers/auth';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;","import { Link,Redirect } from \"react-router-dom\";\nimport React, { Fragment, useState } from 'react';\nimport { connect } from \"react-redux\";\nimport { logout } from '../actions/auth'\nconst Navbar = ({logout,isAuthenticated}) => {\n    const [redirect, setRedirect] = useState(false);\n\n    const logout_user = () => {\n        logout();\n        setRedirect(true);\n    };\n\n    const guestLinks = () => (\n        <Fragment>\n            <li className='nav-item'>\n                <Link className='nav-link' to='/login'>Login</Link>\n            </li>\n            <li className='nav-item'>\n                <Link className='nav-link' to='/signup'>Sign Up</Link>\n            </li>\n        </Fragment>\n    );\n\n    const authLinks = () => (\n        <li className='nav-item'>\n            <a className='nav-link' href='#!' onClick={logout_user}>Logout</a>\n        </li>\n    );\n    return (\n        <nav className=\"container\">\n            {/* <div class=\"container-fluid\">\n            <div class=\"navbar-brand\">\n                <Link to=\"/\">AuthSystem</Link>\n            </div>\n        \n        </div> */}\n\n\n            <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n                <div class=\"navbar-brand\">\n                    <div>AuthSystem</div>\n                </div>\n                <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span class=\"navbar-toggler-icon\"></span>\n                </button>\n\n                <div className='collapse navbar-collapse' id='navbarNav'>\n                    <ul className='navbar-nav'>\n                        <li className='nav-item active'>\n                            <Link className='nav-link' to='/'>Home <span className='sr-only'>(current)</span></Link>\n                        </li>\n                        {isAuthenticated ? authLinks() : guestLinks()}                    </ul>\n                </div>\n            </nav>\n            {redirect ? <Redirect to='/' /> : <Fragment></Fragment>}\n        </nav>\n    )\n};\nconst mapStateToProps = state => ({\n    isAuthenticated: state.isAuthenticated\n});\nexport default connect(mapStateToProps, { logout })(Navbar);","import Navbar from '../components/Navbar';\nimport { useEffect } from 'react';\nimport {connect} from 'react-redux';\nimport { checkAuthenticated, load_user } from '../actions/auth';\n\nconst Layouts = (props) => {\n    useEffect(()=> {\n        props.checkAuthenticated();\n        props.load_user()\n    },[])\n    return (\n        <div>\n            <Navbar />\n            {props.children}\n        </div>\n    )\n}\n\nexport default connect(null, {checkAuthenticated,load_user})(Layouts);","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Home from './containers/Home';\nimport Login from './containers/Login';\nimport Signup from './containers/Signup';\nimport Activate from './containers/Activate';\nimport ResetPassword from './containers/ResetPassword';\nimport ResetPasswordConfirm from './containers/ResetPasswordConfirm';\nimport { Provider } from 'react-redux';\nimport store from './components/store'\n\nimport Layout from './hocs/Layout';\n\nconst App = () => (\n    <Provider store={store}>\n        <Router>\n            <Layout>\n                <Switch>\n                    <Route exact path='/' component={Home} />\n                    <Route exact path='/login' component={Login} />\n                    <Route exact path='/signup' component={Signup} />\n                    <Route exact path='/reset-password' component={ResetPassword} />\n                    <Route exact path='/password/reset/confirm/:uid/:token' component={ResetPasswordConfirm} />\n                    <Route exact path='/activate/:uid/:token' component={Activate} />\n                </Switch>\n            </Layout>\n        </Router>\n    </Provider>\n);\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}